spring:
  application:
    name: order-service
  main:
    allow-bean-definition-overriding: true
  datasource:
    url: jdbc:h2:mem:order_service
    username: root
    password: root
    driverClassName: org.h2.Driver
  jpa:
    spring.jpa.database-platform: org.hibernate.dialect.H2Dialect
    hibernate.ddl-auto: create-drop
  h2:
    console:
      path: /h2-console
      settings.trace: false
      settings.web-allow-others: false
      enabled: true
  sleuth:
    sampler:
      probability: 1.0
  zipkin:
    base-url: http://localhost:9411
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      spring:
        json:
          type:
            mapping: event:com.microservices.orderservice.dto.OrderPlaceEvent
server:
  port: 8082

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: true

management:
  endpoint:
    health:
      show-details: always
    web:
      exposure,include: '''*'''
  health:
    circuitbreakers:
      enabled: true
resilience4j:
  circuitbreaker:
    instances:
      inventory:
        automaticTransitionFromOpenToHalfOpenEnabled: true
        event-consumer-buffer-size: 10
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        registerHealthIndicator: true
        slidingWindowSize: 5
        slidingWindowType: COUNT_BASED
        waitDurationInOpenState: 5s
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s
  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

  logging:
    pattern.level:%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]